syntax = "proto3";
package juno.cwhooks.v1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/query/v1/query.proto";
import "google/api/annotations.proto";

import "juno/cwhooks/v1/genesis.proto";

option go_package = "github.com/CosmosContracts/juno/x/cw-hooks/types";

// Query defines the gRPC querier service.
service Query {
  // Params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/juno/cwhooks/v1/params";
  }

  // StakingContracts
  rpc StakingContracts(QueryStakingContractsRequest) returns (QueryStakingContractsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/juno/cwhooks/v1/staking_contracts";
  }

  // GovernanceContracts
  rpc GovernanceContracts(QueryGovernanceContractsRequest) returns (QueryGovernanceContractsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/juno/cwhooks/v1/governance_contracts";
  }
}

// QueryParams is the request type to get all module params.
message QueryParamsRequest {}

// QueryClockContractsResponse is the response type for the Query/ClockContracts RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// QueryStakingContractsRequest
message QueryStakingContractsRequest {}

// QueryStakingContractsResponse
message QueryStakingContractsResponse {
  repeated string contracts = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryStakingContractsRequest
message QueryGovernanceContractsRequest {}

// QueryGovernanceContractsResponse
message QueryGovernanceContractsResponse {
  repeated string contracts = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}
