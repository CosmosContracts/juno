syntax = "proto3";
package juno.cwhooks.v1;

import "cosmos/msg/v1/msg.proto";
import "juno/cwhooks/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

option go_package = "github.com/CosmosContracts/juno/x/cw-hooks/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // UpdateParams defines a governance operation for updating the x/clock module
  // parameters. The authority is hard-coded to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // RegisterStaking.
  rpc RegisterStaking(MsgRegisterStaking) returns (MsgRegisterStakingResponse);

  // UnregisterStaking.
  rpc UnregisterStaking(MsgUnregisterStaking) returns (MsgUnregisterStakingResponse);

  // RegisterGovernance.
  rpc RegisterGovernance(MsgRegisterGovernance) returns (MsgRegisterGovernanceResponse);

  // UnregisterGovernance.
  rpc UnregisterGovernance(MsgUnregisterGovernance) returns (MsgUnregisterGovernanceResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "juno/x/cwhooks/MsgUpdateParams";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/clock parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}


// MsgRegisterStaking
message MsgRegisterStaking {
  option (amino.name)           = "juno/x/cwhooks/MsgRegisterStaking";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string register_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgRegisterStakingResponse
message MsgRegisterStakingResponse {}

// MsgRegisterGovernance
message MsgRegisterGovernance {
   option (amino.name)           = "juno/x/cwhooks/MsgRegisterGovernance";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string register_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgRegisterGovernanceResponse
message MsgRegisterGovernanceResponse {}


// MsgUnregisterGovernance
message MsgUnregisterGovernance {
  option (amino.name)           = "juno/x/cwhooks/MsgUnregisterGovernance";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string register_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUnregisterGovernanceResponse
message MsgUnregisterGovernanceResponse {}


// MsgUnregisterStaking
message MsgUnregisterStaking {
  option (amino.name)           = "juno/x/cwhooks/MsgUnregisterStaking";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string contract_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  string register_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgUnregisterStakingResponse
message MsgUnregisterStakingResponse {}
