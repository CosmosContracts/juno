syntax = "proto3";
package juno.feeshare.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "juno/feeshare/v1/feeshare.proto";

option go_package = "github.com/CosmosContracts/juno/x/feeshare/types";

// GenesisState defines the module's genesis state.
message GenesisState {
  // params are the feeshare module parameters
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // FeeShare is a slice of active registered contracts for fee distribution
  repeated FeeShare fee_share = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// Params defines the feeshare module params
message Params {
  option (gogoproto.equal) = true;
  // enable_feeshare defines a parameter to enable the feeshare module
  bool enable_fee_share = 1;
  // developer_shares defines the proportion of the transaction fees to be
  // distributed to the registered contract owner
  string developer_shares = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];
  // allowed_denoms defines the list of denoms that are allowed to be paid to
  // the contract withdraw addresses. If said denom is not in the list, the fees
  // will ONLY be sent to the community pool.
  // If this list is empty, all denoms are allowed.
  repeated string allowed_denoms = 3;
}
