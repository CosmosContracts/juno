syntax = "proto3";
package gaia.globalfee.v1beta1;

import "cosmos/msg/v1/msg.proto";
import "gaia/globalfee/v1beta1/genesis.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

option go_package = "github.com/cosmos/gaia/x/globalfee/types";

// Msg defines the x/globalfee Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // UpdateParams defines a governance operation for updating the x/mint module
  // parameters. The authority is hard-coded to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "gaia/x/globalfee/MsgUpdateParams";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}